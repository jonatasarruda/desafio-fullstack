// <auto-generated />
using System;
using DesafioFullstack.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DesafioFullstack.Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250520081101_NovasEntidades")]
    partial class NovasEntidades
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DesafioFullstack.Api.Domain.Models.Atendimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TextoAberturaAtendimento")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Atendimento", (string)null);
                });

            modelBuilder.Entity("DesafioFullstack.Api.Domain.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("DesafioFullstack.Api.Domain.Models.Parecer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AtendimentoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("DescricaoParecer")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AtendimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pareceres", (string)null);
                });

            modelBuilder.Entity("DesafioFullstack.Api.Domain.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("DesafioFullstack.Api.Domain.Models.Atendimento", b =>
                {
                    b.HasOne("DesafioFullstack.Api.Domain.Models.Cliente", "Cliente")
                        .WithMany("Atendimentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DesafioFullstack.Api.Domain.Models.Usuario", "Usuario")
                        .WithMany("Atendimentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DesafioFullstack.Api.Domain.Models.Parecer", b =>
                {
                    b.HasOne("DesafioFullstack.Api.Domain.Models.Atendimento", "Atendimento")
                        .WithMany("Pareceres")
                        .HasForeignKey("AtendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioFullstack.Api.Domain.Models.Usuario", "Usuario")
                        .WithMany("Pareceres")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Atendimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DesafioFullstack.Api.Domain.Models.Atendimento", b =>
                {
                    b.Navigation("Pareceres");
                });

            modelBuilder.Entity("DesafioFullstack.Api.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Atendimentos");
                });

            modelBuilder.Entity("DesafioFullstack.Api.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Atendimentos");

                    b.Navigation("Pareceres");
                });
#pragma warning restore 612, 618
        }
    }
}
