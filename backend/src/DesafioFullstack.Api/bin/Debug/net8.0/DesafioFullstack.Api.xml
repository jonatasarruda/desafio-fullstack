<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DesafioFullstack.Api</name>
    </assembly>
    <members>
        <member name="T:DesafioFullstack.Api.Controllers.AtendimentoController">
            <summary>
            Controlador para gerenciar operações relacionadas a atendimentos.
            </summary>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.AtendimentoController.#ctor(DesafioFullstack.Api.Domain.Services.Interfaces.IAtendimentoService)">
            <summary>
            Construtor do AtendimentoController.
            </summary>
            <param name="atendimentoService">Serviço de atendimento injetado.</param>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.AtendimentoController.Adicionar(DesafioFullstack.Api.Contract.Atendimentos.AtendimentoRequestContract)">
            <summary>
            Adiciona um novo atendimento.
            </summary>
            <param name="contrato">Dados do novo atendimento.</param>
            <returns>O atendimento recém-criado.</returns>
            <response code="201">Retorna o atendimento recém-criado.</response>
            <response code="400">Se os dados do atendimento forem inválidos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.AtendimentoController.Obter">
            <summary>
            Obtém todos os atendimentos.
            </summary>
            <returns>Lista de todos os atendimentos.</returns>
            <response code="200">Retorna a lista de atendimentos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.AtendimentoController.Obter(System.Int64)">
            <summary>
            Obtém um atendimento específico pelo ID.
            </summary>
            <param name="id">ID do atendimento.</param>
            <returns>O atendimento correspondente ao ID.</returns>
            <response code="200">Retorna o atendimento.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="404">Se o atendimento não for encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.AtendimentoController.Atualizar(System.Int64,DesafioFullstack.Api.Contract.Atendimentos.AtendimentoRequestContract)">
            <summary>
            Atualiza um atendimento existente.
            </summary>
            <param name="id">ID do atendimento a ser atualizado.</param>
            <param name="contrato">Novos dados do atendimento.</param>
            <returns>O atendimento atualizado.</returns>
            <response code="200">Retorna o atendimento atualizado.</response>
            <response code="400">Se os dados do atendimento forem inválidos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="404">Se o atendimento não for encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.AtendimentoController.ObterPorCliente(System.Int64)">
            <summary>
            Obtém todos os atendimento específico pelo ID do cliente.
            </summary>
            <param name="idCliente">Id do cliente.</param>
            <returns>Lista de atendimentos do cliente.</returns>
            <response code="200">Retorna lista de atendimentos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="404">Se o cliente não for encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.AtendimentoController.ObterPorUsuario(System.Int64)">
            <summary>
            Obtém todos os atendimento específico pelo ID do usuário.
            </summary>
            <param name="idUsuario">Id do usuário.</param>
            <returns>Lista de atendimentos do cliente.</returns>
            <response code="200">Retorna lista de atendimentos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="404">Se o usuário não for encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.AtendimentoController.ObterPorData(System.DateTime,System.DateTime)">
            <summary>
            Obtém todos os atendimento baseado na data de cadastro.
            </summary>
            <param name="dataInicial">Data inicial.</param>
            <param name="dataFinal">Data final.</param>
            <returns>Lista de atendimentos do que estão com data de cadastro entre as datas passadas.</returns>
            <response code="200">Retorna lista de atendimentos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.ClienteController.Adicionar(DesafioFullstack.Api.Contract.Cliente.ClienteRequestContract)">
            <summary>
            Adiciona um novo cliente.
            </summary>
            <param name="contrato">Dados do novo cliente.</param>
            <returns>O cliente recém-criado.</returns>
            <response code="201">Retorna o cliente recém-criado.</response>
            <response code="400">Se os dados do cliente forem inválidos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.ClienteController.Obter">
            <summary>
            Obtém todos os clientes.
            </summary>
            <returns>Lista de todos os clientes.</returns>
            <response code="200">Retorna a lista de clientes.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.ClienteController.Obter(System.Int64)">
            <summary>
            Obtém um cliente específico pelo ID.
            </summary>
            <param name="id">ID do cliente.</param>
            <returns>O cliente correspondente ao ID.</returns>
            <response code="200">Retorna o cliente.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="404">Se o cliente não for encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.ClienteController.ObterPorNome(System.String)">
            <summary>
            Obtém um cliente específico pelo ID.
            </summary>
            <param name="nome">Nome do cliente.</param>
            <returns>O cliente correspondente ao ID.</returns>
            <response code="200">Retorna o cliente.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="404">Se o cliente não for encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.ClienteController.Atualizar(System.Int64,DesafioFullstack.Api.Contract.Cliente.ClienteRequestContract)">
            <summary>
            Atualiza um cliente existente.
            </summary>
            <param name="id">ID do cliente a ser atualizado.</param>
            <param name="contrato">Novos dados do cliente.</param>
            <returns>O cliente atualizado.</returns>
            <response code="200">Retorna o cliente atualizado.</response>
            <response code="400">Se os dados do cliente forem inválidos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="404">Se o cliente não for encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="T:DesafioFullstack.Api.Controllers.UsuarioController">
            <summary>
            Controlador para gerenciar operações relacionadas a usuários.
            </summary>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.UsuarioController.#ctor(DesafioFullstack.Api.Domain.Services.Interfaces.IUsuarioService)">
            <summary>
            Construtor do UsuarioController.
            </summary>
            <param name="usuarioService">Serviço de usuário injetado.</param>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.UsuarioController.Autenticar(DesafioFullstack.Api.Contract.Usuario.UsuarioLoginRequestContract)">
            <summary>
            Autentica um usuário e retorna um token de acesso.
            </summary>
            <param name="contrato">Dados de login do usuário.</param>
            <returns>Token de acesso se a autenticação for bem-sucedida.</returns>
            <response code="200">Retorna o token de acesso.</response>
            <response code="401">Credenciais inválidas.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.UsuarioController.Logout">
            <summary>
            Realiza o logout do usuário (simulado).
            </summary>
            <returns>Mensagem de sucesso do logout.</returns>
            <response code="200">Logout solicitado com sucesso.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.UsuarioController.Adicionar(DesafioFullstack.Api.Contract.Usuario.UsuarioRequestContract)">
            <summary>
            Adiciona um novo usuário.
            </summary>
            <param name="contrato">Dados do novo usuário.</param>
            <returns>O usuário recém-criado.</returns>
            <response code="201">Retorna o usuário recém-criado.</response>
            <response code="400">Se os dados do usuário forem inválidos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.UsuarioController.Obter">
            <summary>
            Obtém todos os usuários.
            </summary>
            <returns>Lista de todos os usuários.</returns>
            <response code="200">Retorna a lista de usuários.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.UsuarioController.Obter(System.Int64)">
            <summary>
            Obtém um usuário específico pelo ID.
            </summary>
            <param name="id">ID do usuário.</param>
            <returns>O usuário correspondente ao ID.</returns>
            <response code="200">Retorna o usuário.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="404">Se o usuário não for encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:DesafioFullstack.Api.Controllers.UsuarioController.Atualizar(System.Int64,DesafioFullstack.Api.Contract.Usuario.UsuarioRequestContract)">
            <summary>
            Atualiza um usuário existente.
            </summary>
            <param name="Id">ID do usuário a ser atualizado.</param>
            <param name="contrato">Novos dados do usuário.</param>
            <returns>O usuário atualizado.</returns>
            <response code="200">Retorna o usuário atualizado.</response>
            <response code="400">Se os dados do usuário forem inválidos.</response>
            <response code="401">Se o usuário não estiver autenticado.</response>
            <response code="404">Se o usuário não for encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="T:DesafioFullstack.Api.Domain.Services.Interfaces.IService`3">
            <summary>
            Interface generica para criação de serviços.
            </summary>
            <typeparam name="RQ">Contrato de request</typeparam>
            <typeparam name="RS">Contrato de response</typeparam>
            <typeparam name="I">Tipo de identificador</typeparam>
        </member>
        <member name="T:DesafioFullstack.Api.Migrations.CriarEntidades">
            <inheritdoc />
        </member>
        <member name="M:DesafioFullstack.Api.Migrations.CriarEntidades.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DesafioFullstack.Api.Migrations.CriarEntidades.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DesafioFullstack.Api.Migrations.CriarEntidades.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:DesafioFullstack.Api.Migrations.NovasEntidades">
            <inheritdoc />
        </member>
        <member name="M:DesafioFullstack.Api.Migrations.NovasEntidades.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DesafioFullstack.Api.Migrations.NovasEntidades.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DesafioFullstack.Api.Migrations.NovasEntidades.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
